//this is a 'workflow graph' component

// Hook used for handling side effects in functional components.
// Used for Fetching data when the component is mounted.
import { useEffect } from "react";
// This is used for managing application state in a Redux store.
import { useDispatch } from "react-redux";

// NOTE This library is deprecated and the Styles were not working with it, So the Styles are used without it.
// Import styles from a Material UI library.
// Utility for defining CSS styles in a React component.
// import makeStyles from "@material-ui/core/styles/makeStyles";

// Import functions for fetching data.
//'workflow graph'
import { fetchCaseStatuses } from "../../action-creators";
// Import functions for selecting data.
// 'workflow graph'
import { getCaseStatuses } from "../../selectors";
// Import a custom library function.
import { useMemoizedSelector } from "../../../../../libs";

// Import styles for this component.
import css from "./styles.css"; // NOTE Used 'css' instead of 'styles' to avoid name conflict with 'const css'

// NOTE Deprecated Use
// Create a useStyles function to define and apply styles to ensure consistent styling to the component.
// const useStyles = makeStyles(styles);

// Define the main Component function.
const Component = () => {
  // NOTE Deprecated Use
  // Contains CSS classes generated by makeStyles, which can be used to style elements in the component.
  // const css = useStyles();

  // Get access to Redux's dispatch function to trigger actions.
  const dispatch = useDispatch();
  // Use the useMemoizedSelector function to get data from the Redux store.
  const data = useMemoizedSelector(state => getCaseStatuses(state));

  // Extract statistics from the data if it exists, otherwise set it to null.
  const stats = data.getIn(["data", "stats"]) ? data.getIn(["data", "stats"]).toJS() : null;

  // Use the useEffect hook to perform an action when the component is mounted.
  useEffect(() => {
    // Dispatch an action to fetch PercentageChildrenReceivedChildProtectionServices
    dispatch(fetchCaseStatuses());
  }, []);

  // Render the following JSX (JavaScript XML) content.
  return (
    <>
      {stats && (
        <>
          {/* Display a heading */}
          <h2>Workflow</h2>

          {/* Create a container for displaying statistics */}
          <div className={css.container}>
            {/* Render statistics cards for different protection concerns */}
            {/* Each card displays a percentage and the number of cases for a specific concern */}
            {/* Cards have different background colors for visual distinction */}

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)" }} flat>
              <div className={css.perc}>
                {stats["Registaration"]}
              </div>
              <div className={css.text}>Registaration</div>
            </div>

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)" }} flat>
              <div className={css.perc}>
                {stats["Assessment"]}
              </div>
              <div className={css.text}>Assessment</div>
            </div>

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)"}} flat>
              <div className={css.perc}>
                {stats["Case Plan"]}
              </div>
              <div className={css.text}>Case Plan</div>
            </div>

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)" }} flat>
              <div className={css.perc}>
                {stats["Referral"]}
              </div>
              <div className={css.text}>Referral</div>
            </div>

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)"}} flat>
              <div className={css.perc}>
                {stats["Case Conference"]}
              </div>
              <div className={css.text}>Case Conference</div>
            </div>

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)"}} flat>
              <div className={css.perc}>
                {stats["Final Case Review"]}
              </div>
              <div className={css.text}>Final Case Review</div>
            </div>

            <div className={css.card} style={{ backgroundColor: "rgb(50, 158, 168)"}} flat>
              <div className={css.perc}>
                {stats["Case Closure"]}
              </div>
              <div className={css.text}>Case Closure</div>
            </div>
          </div>
        </>
      )}
    </>
  );
};

// Set a display name for the Component
Component.displayName = `CaseStatuses`;

// Export the Component so it can be used in other parts of the application.
export default Component;
